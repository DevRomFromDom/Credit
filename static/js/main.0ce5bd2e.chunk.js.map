{"version":3,"sources":["components/Credit/Credit.module.scss","components/Information/Information.module.scss","components/Credit/PercentButtons/PercentButtons.module.scss","App.module.scss","components/helpers/addSpaces.js","components/Information/Information.jsx","components/helpers/calculations.js","components/Credit/PercentButtons/PercentButtons.jsx","components/helpers/removeSpaces.js","components/helpers/validations.js","components/Credit/Credit.jsx","App.js","index.js"],"names":["module","exports","addSpaces","props","toString","replace","Item","value","title","className","styles","info_cart","info_cart_lable","isNaN","Infinity","processEdgeConditions","toFixed","Information","price","firstPay","years","percent","creditBody","getCreditBody","monthPayment","a","getMonthPayment","salary","getSalary","overPay","getOverPay","main","info","info_payment","info_credit","PercentButtons","firstPayPercents","firstPayPercent","changeFirstPayPercent","map","item","itemIndex","pay_percent_select","pay_percent","onClick","removeSpaces","validate","createValidator","builder","f","data","prop","x","invalid","formatChars","9","Credit","useState","inputFocus","setInputFocus","memo","JSON","parse","localStorage","getItem","getCreditInfo","setPrice","setFirstPayPercent","setFirstPay","setYears","setPercent","useEffect","newFirstPay","Math","round","newPrice","saveCreditInfo","save","validationContainerRef","current","setItem","stringify","inputPrice","useRef","inputFirstPay","priceFocus","blur","focus","firstPayFocus","validation","ref","form","input","validationInfo","getNode","get","Input","autoFocus","rightIcon","type","size","mask","onChange","e","target","handleChangePrice","maskChar","onFocus","setSelectionRange","length","handleChangeFirstPay","first_pay_percent","newPercent","onValueChange","submit","Button","use","width","clear","App","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ce5bd2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Credit_main__1XOk5\",\"form\":\"Credit_form__1P5zC\",\"input\":\"Credit_input__1Q7id\",\"submit\":\"Credit_submit__3aJO4\",\"first_pay_percent\":\"Credit_first_pay_percent__1-nBW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Information_main__96x1u\",\"info\":\"Information_info__-LCEs\",\"info_cart\":\"Information_info_cart__2fkpF\",\"info_cart_lable\":\"Information_info_cart_lable__uuiz4\",\"info_payment\":\"Information_info_payment__3UUuO\",\"info_credit\":\"Information_info_credit__bAIJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pay_percent\":\"PercentButtons_pay_percent__3cXnW\",\"pay_percent_select\":\"PercentButtons_pay_percent_select__1UI6X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3uv94\"};","export const addSpaces = (props) => {\r\n    return props.toString().replace(/\\s/g, \"\").replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1 \");\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./Information.module.scss\";\r\nimport {\r\n    getCreditBody,\r\n    getMonthPayment,\r\n    getSalary,\r\n    getOverPay,\r\n} from \"../helpers/calculations\";\r\nimport { addSpaces } from \"../helpers/addSpaces\";\r\n\r\nconst Item = ({ value, title }) => {\r\n    const processEdgeConditions = (value) => {\r\n        return isNaN(value) ||\r\n            value === Infinity ||\r\n            value === -Infinity ||\r\n            value < 0\r\n            ? 0\r\n            : value;\r\n    };\r\n    return (\r\n        <div className={styles.info_cart}>\r\n            <label className={styles.info_cart_lable}>{title}</label>\r\n            {addSpaces(processEdgeConditions(value).toFixed(2))} &#8381;\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Information = ({ price, firstPay, years, percent }) => {\r\n    const creditBody = getCreditBody(price, firstPay);\r\n    const monthPayment = getMonthPayment(percent, years, creditBody);\r\n    const salary = getSalary(monthPayment);\r\n    const overPay = getOverPay(monthPayment, years, price, firstPay);\r\n\r\n    return (\r\n        <div className={styles.main}>\r\n            <div className={styles.info}>\r\n                <div className={styles.info_payment}>\r\n                    <Item value={monthPayment} title={\"Ежемесячный платеж\"} />\r\n                    <Item value={salary} title={\"Необходимый доход\"} />\r\n                </div>\r\n                <div className={styles.info_credit}>\r\n                    <Item value={overPay} title={\"Переплата\"} />\r\n                    <Item value={creditBody} title={\"Тело кредита\"} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Information;\r\n","export const getCreditBody = (price, firstPay) => {\r\n    return price - firstPay;\r\n};\r\nexport const getMonthPayment = (percent, years, creditBody) => {\r\n    const a = percent / 1200;\r\n    const b = (1 + a) ** (years * 12);\r\n    return creditBody * (a + a / (b - 1));\r\n};\r\nexport const getSalary = (monthPayment) => {\r\n    return 5 * (monthPayment / 3);\r\n};\r\n\r\nexport const getOverPay = (monthPayment, years, price, firstPay) => {\r\n    return monthPayment * years * 12 - price + firstPay;\r\n};\r\n","import styles from \"./PercentButtons.module.scss\";\r\nimport React from \"react\";\r\n\r\nconst PercentButtons = ({\r\n    firstPayPercents,\r\n    firstPayPercent,\r\n    changeFirstPayPercent\r\n}) => {\r\n    if (!firstPayPercents) {\r\n        return null\r\n    } else {\r\n        return firstPayPercents.map((item, itemIndex) => {\r\n            return (\r\n                <button\r\n                    key={itemIndex}\r\n                    className={\r\n                        item === firstPayPercent\r\n                            ? styles.pay_percent_select\r\n                            : styles.pay_percent\r\n                    }\r\n                    value={item}\r\n                    onClick={changeFirstPayPercent}\r\n                >{`${item} %`}</button>\r\n            );\r\n        });\r\n    }\r\n};\r\n\r\nexport default PercentButtons;\r\n\r\n","export const removeSpaces = (props) => {\r\n    return props\r\n        .toString()\r\n        .replace(/\\s/g, \"\")\r\n};\r\n","import { createValidator } from \"@skbkontur/react-ui-validations\";\r\nimport { removeSpaces } from \"./removeSpaces\";\r\n\r\nexport const validate = createValidator((builder) => {\r\n    const f = +removeSpaces(builder.data.price);\r\n    builder.prop(\r\n        (x) => x.price,\r\n        (builder) => {\r\n            builder.invalid(\r\n                (price) => !price,\r\n                \"Стоимость недвижимости должна быть указана\",\r\n                \"submit\"\r\n            );\r\n        }\r\n    );\r\n    builder.prop(\r\n        (x) => x.firstPay,\r\n        (builder) => {\r\n            builder.invalid(\r\n                (firstPay) => !firstPay,\r\n                \"Укажите первоначальный взнос\",\r\n                \"submit\"\r\n            );\r\n        }\r\n    );\r\n    builder.prop(\r\n        (x) => x.firstPay,\r\n        (builder) => {\r\n            builder.invalid(\r\n                (firstPay) => +removeSpaces(firstPay) > f,\r\n                \"Первоначальный взнос не может быть больше стоимости недвижимости\",\r\n                \"lostfocus\"\r\n            );\r\n        }\r\n    );\r\n});\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport styles from \"./Credit.module.scss\";\r\nimport Information from \"../Information/Information\";\r\nimport { Button, Input } from \"@skbkontur/react-ui\";\r\nimport { addSpaces } from \"../helpers/addSpaces\";\r\nimport PercentButtons from \"./PercentButtons/PercentButtons\";\r\nimport { removeSpaces } from \"../helpers/removeSpaces\";\r\nimport { validate } from \"../helpers/validations\";\r\nimport {\r\n    ValidationContainer,\r\n    ValidationWrapper,\r\n} from \"@skbkontur/react-ui-validations\";\r\n\r\nconst formatChars = {\r\n    9: \"[0-9 ]\",\r\n};\r\n\r\nconst getCreditInfo = () => {\r\n    const {\r\n        price = \"\",\r\n        firstPay = \"\",\r\n        years = \"\",\r\n        percent = \"\",\r\n        firstPayPercent = 0,\r\n    } = JSON.parse(localStorage.getItem(\"creditInfo\")) ?? {};\r\n    return { price, firstPay, years, percent, firstPayPercent };\r\n};\r\n\r\nconst Credit = () => {\r\n    const [inputFocus, setInputFocus] = useState(0);\r\n    const memo = getCreditInfo();\r\n    const firstPayPercents = [10, 15, 20, 25, 30];\r\n    const [price, setPrice] = useState(memo.price);\r\n    const [firstPayPercent, setFirstPayPercent] = useState(\r\n        memo.firstPayPercent\r\n    );\r\n    const [firstPay, setFirstPay] = useState(memo.firstPay);\r\n    const [years, setYears] = useState(memo.years);\r\n    const [percent, setPercent] = useState(memo.percent);\r\n\r\n    useEffect(() => {\r\n        if (\r\n            price !== \"\" &&\r\n            inputFocus === 0 &&\r\n            firstPayPercent !== 0 &&\r\n            firstPayPercent !== \"0\"\r\n        ) {\r\n            const newFirstPay = Math.round(\r\n                (+removeSpaces(price) / 100) * firstPayPercent\r\n            );\r\n            setFirstPay(addSpaces(newFirstPay));\r\n        }\r\n        if (\r\n            firstPay !== \"\" &&\r\n            inputFocus === 1 &&\r\n            firstPayPercent !== 0 &&\r\n            firstPayPercent !== \"0\"\r\n        ) {\r\n            const newPrice = Math.round(\r\n                (+removeSpaces(firstPay) / firstPayPercent) * 100\r\n            );\r\n            setPrice(addSpaces(newPrice));\r\n        }\r\n        if (\r\n            price === \"\" &&\r\n            +removeSpaces(firstPay) === 1 &&\r\n            firstPayPercent !== 0\r\n        ) {\r\n            setFirstPay(\"\");\r\n        }\r\n        if (firstPay === \"\" && inputFocus === 1 && firstPayPercent !== 0) {\r\n            setPrice(\"\");\r\n        }\r\n    }, [firstPayPercent, price, firstPay, inputFocus]);\r\n\r\n    const saveCreditInfo = {\r\n        price: price.toString(),\r\n        firstPay: firstPay.toString(),\r\n        years: years.toString(),\r\n        percent: percent.toString(),\r\n        firstPayPercent: firstPayPercent.toString(),\r\n    };\r\n\r\n    const changeFirstPayPercent = (e) => {\r\n        const newPercent = +e.target.value;\r\n        setFirstPayPercent(firstPayPercent === newPercent ? 0 : newPercent);\r\n    };\r\n\r\n    const save = async () => {\r\n        if (!(await validationContainerRef.current?.validate())) {\r\n            return;\r\n        }\r\n        localStorage.setItem(\"creditInfo\", JSON.stringify(saveCreditInfo));\r\n    };\r\n\r\n    const clear = () => {\r\n        setPrice(\"\");\r\n        setYears(\"\");\r\n        setFirstPay(\"\");\r\n        setPercent(\"\");\r\n        setFirstPayPercent(0);\r\n        localStorage.clear();\r\n    };\r\n\r\n    const inputPrice = useRef();\r\n    const inputFirstPay = useRef();\r\n\r\n    const priceFocus = async () => {\r\n        await inputPrice.current.blur();\r\n        await inputPrice.current.focus();\r\n    };\r\n\r\n    const firstPayFocus = async () => {\r\n        await inputFirstPay.current.blur();\r\n        await inputFirstPay.current.focus();\r\n    };\r\n\r\n    const handleChangePrice = (e) => {\r\n        setInputFocus(0);\r\n        if (+removeSpaces(e.target.value) > +removeSpaces(price)) {\r\n            priceFocus();\r\n        }\r\n        setPrice(addSpaces(e.target.value));\r\n    };\r\n\r\n    const handleChangeFirstPay = (e) => {\r\n        setInputFocus(1);\r\n        if (+removeSpaces(e.target.value) > +removeSpaces(firstPay)) {\r\n            firstPayFocus();\r\n        }\r\n        setFirstPay(addSpaces(e.target.value));\r\n    };\r\n\r\n    const validationContainerRef = useRef(null);\r\n\r\n    const validation = validate({ price, firstPay, years, percent });\r\n\r\n    return (\r\n        <div className={styles.main}>\r\n            <ValidationContainer ref={validationContainerRef}>\r\n                <div className={styles.form}>\r\n                    <div className={styles.input}>\r\n                        <label>Стоимость недвижимости</label>\r\n                        <ValidationWrapper\r\n                            validationInfo={validation\r\n                                .getNode((x) => x.price)\r\n                                .get()}\r\n                        >\r\n                            <Input\r\n                                autoFocus={true}\r\n                                ref={inputPrice}\r\n                                rightIcon=\"&#8381;\"\r\n                                type=\"text\"\r\n                                size=\"small\"\r\n                                mask=\"99999999999\"\r\n                                onChange={(e) => handleChangePrice(e)}\r\n                                value={price}\r\n                                maskChar=\" \"\r\n                                formatChars={formatChars}\r\n                                onFocus={(e) =>\r\n                                    e.target.setSelectionRange(\r\n                                        e.target.value.length,\r\n                                        e.target.value.length\r\n                                    )\r\n                                }\r\n                            />\r\n                        </ValidationWrapper>\r\n                    </div>\r\n                    <div className={styles.input}>\r\n                        <label>Первоначальный взнос</label>\r\n                        <ValidationWrapper\r\n                            validationInfo={validation\r\n                                .getNode((x) => x.firstPay)\r\n                                .get()}\r\n                        >\r\n                            <Input\r\n                                ref={inputFirstPay}\r\n                                rightIcon=\"&#8381;\"\r\n                                type=\"text\"\r\n                                size=\"small\"\r\n                                mask=\"9999999999\"\r\n                                onChange={(e) => handleChangeFirstPay(e)}\r\n                                value={firstPay}\r\n                                maskChar=\" \"\r\n                                formatChars={formatChars}\r\n                                onFocus={(e) =>\r\n                                    e.target.setSelectionRange(\r\n                                        e.target.value.length,\r\n                                        e.target.value.length\r\n                                    )\r\n                                }\r\n                            />\r\n                        </ValidationWrapper>\r\n                    </div>\r\n                    <div className={styles.first_pay_percent}>\r\n                        <PercentButtons\r\n                            firstPayPercents={firstPayPercents}\r\n                            firstPayPercent={firstPayPercent}\r\n                            changeFirstPayPercent={changeFirstPayPercent}\r\n                        />\r\n                    </div>\r\n                    <div className={styles.input}>\r\n                        <label>Срок кредита</label>\r\n                        <Input\r\n                            value={years}\r\n                            onValueChange={setYears}\r\n                            mask=\"99\"\r\n                            maskChar=\" \"\r\n                            rightIcon={\"ЛЕТ\"}\r\n                        />\r\n                    </div>\r\n                    <div className={styles.input}>\r\n                        <label>Процентная ставка</label>\r\n                        <Input\r\n                            value={percent}\r\n                            onValueChange={setPercent}\r\n                            rightIcon={\"%\"}\r\n                            mask=\"99\"\r\n                            maskChar=\" \"\r\n                        />\r\n                    </div>\r\n                    <div className={styles.submit}>\r\n                        <Button use=\"success\" onClick={save} width=\"45%\">\r\n                            Save\r\n                        </Button>\r\n                        <Button\r\n                            use=\"default\"\r\n                            onClick={(e) => clear(e)}\r\n                            width=\"45%\"\r\n                        >\r\n                            Clear\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </ValidationContainer>\r\n            <Information\r\n                price={+removeSpaces(price)}\r\n                firstPay={+removeSpaces(firstPay)}\r\n                years={+removeSpaces(years)}\r\n                percent={+removeSpaces(percent)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Credit;\r\n","import React from \"react\"\nimport Credit from \"./components/Credit/Credit\"\nimport styles from \"./App.module.scss\"\nfunction App() {\n    return (\n        <div className={styles.app}>\n            <Credit/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n        <App />,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}